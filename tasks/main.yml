---
- name: 'Include OS specific vars'
  ansible.builtin.include_vars: "{{ lookup('first_found', role_vars_files) }}"
  vars:
    role_vars_files:
      files:
        - "{{ ansible_facts['os_family'] }}-{{ ansible_facts['distribution_major_version'] }}.yml"
        - "{{ ansible_facts['os_family'] }}.yml"
      paths:
        - 'vars'
  no_log: true

- name: 'Ensure dependencies'
  ansible.builtin.package:
    name: "{{ nfs_server_packages }}"
    state: 'present'

- name: "Set up disk quota"
  ansible.builtin.include_tasks:
    file: 'quota.yml'
  when: nfs_server_enable_quota

- name: 'Ensure firewalld services'
  ansible.posix.firewalld:
    service: "{{ nfs_firewalld_service }}"
    immediate: true
    permanent: true
    state: 'enabled'
  loop:
    - 'nfs'
    - 'mountd'
    - 'rpc-bind'
    - "{{ (nfs_server_enable_quota) | ternary('rquotad', omit) }}"
  loop_control:
    loop_var: 'nfs_firewalld_service'
  when: ansible_facts['os_family'] == 'RedHat'

- name: 'Ensure Kerberos Principal'
  freeipa.ansible_freeipa.ipaservice:
    name: "nfs/{{ ansible_facts['fqdn'] }}@{{ ipaclient_domain | upper }}"
    state: 'present'
    ipaadmin_principal: "{{ ipaadmin_principal }}"
    ipaadmin_password: "{{ ipaadmin_password }}"
  delegate_to: "{{ nfs_server_ipa_server }}"
  register: 'nfs_kerberos_principal'

- name: 'Retrieve keytab'  # noqa no-handler
  ansible.builtin.shell: |
    kinit -k
    ipa-getkeytab -p nfs/$(hostname -f)@{{ ipaclient_domain | upper }} -k /etc/krb5.keytab
  notify: 'Reload nfs'
  changed_when: true
  when: nfs_kerberos_principal['changed']

- name: 'Ensure exported directories'
  ansible.builtin.file:
    state: 'directory'
    owner: "{{ nfs_server_export['owner'] | default('root') }}"
    group: "{{ nfs_server_export['group'] | default('root') }}"
    path: "{{ nfs_server_export['path'] }}"
    mode: "{{ nfs_server_export['mode'] | default(nfs_server_export_default_mode) }}"
  loop: "{{ nfs_server_exports }}"
  loop_control:
    loop_var: 'nfs_server_export'

- name: 'Ensure exports'
  ansible.builtin.template:
    src: 'exports.j2'
    dest: '/etc/exports'
    mode: '0644'
    owner: 'root'
    group: 'root'
  notify: 'Reload exports'

- name: 'Debian-like: pin mountd on port 20048'
  ansible.builtin.copy:
    dest: '/etc/nfs.conf.d/mountd_static.conf'
    content: |
      # This file is managed by Ansible
      # YOUR CHANGES WILL BE LOST!
      # Pins mountd on the port firewalld expects when allowing mountd
      [mountd]
      port=20048
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: ansible_facts['os_family'] == 'Debian'

- name: 'Ensure system services'
  ansible.builtin.service:
    name: "{{ nfs_server_service }}"
    state: 'started'
    enabled: true
  loop: "{{ nfs_server_service_list }}"
  loop_control:
    loop_var: 'nfs_server_service'
  notify: 'Reload nfs'

- name: 'Ensure NFS homedir creation scripts'
  ansible.builtin.copy:
    src: "{{ nfs_server_script['src'] }}"
    dest: "{{ nfs_server_script['dest'] }}"
    mode: "{{ nfs_server_script['mode'] }}"
    owner: 'root'
    group: 'root'
  loop:
    - src: '01_mknfshome.conf.sh'
      dest: '/etc/profile.d/01_mknfshome.conf.sh'
      mode: '0644'
    - src: '02_mknfshome.sh'
      dest: '/etc/profile.d/02_mknfshome.sh'
      mode: '0644'
    - src: 'mkhome.sh'
      dest: '/exports/mkhome.sh'
      mode: '0755'
  loop_control:
    loop_var: 'nfs_server_script'
  when: nfs_server_deploy_homedir_scripts
